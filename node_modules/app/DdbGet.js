console.log('Loading function');

var WebIsf=require('app/WebIsf');
var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc

AWS.config.update({region: "us-west-2"});
var dynamo = new doc.DynamoDB();

var conclude = function(data,data2,event,context) {
            delete data.lastGetTs;
            delete data.l;
            delete data.addedTs;
            delete data.emails;
            
            id=data.id;
            delete data.id;
            data2[id]=JSON.parse(JSON.stringify(data));

            if(Object.keys(data2).length==event.length) context.succeed(data2);

};

exports.handler = function(event, context) {
    //console.log('Received event:', JSON.stringify(event, null, 2));

    data2={};
    
    event.map(function(x) {

        dynamo.getItem({
            "TableName":"zboota-cars",
            "Key":{"id":x.a+"/"+x.n}
        }, function(err,data) {

            if(data==null || Object.keys(data).length==0) {
                //console.log("Not found");
                x.a=(x.a=="B"?"2:B":x.a); // map to ISF format
                WebIsf.handler(x,function(dataIsf) {

                    // reformat for return
                    x.a=(x.a=="2:B"?"B":x.a); // map from ISF format
                    todayTs=new Date().toISOString().replace(/T/," ").replace(/\..*/,"");
                    data={
                       lastGetTs:todayTs,
                       l:"dummy",
                       addedTs:todayTs,
                       isf:dataIsf,
                       id:x.a+"/"+x.n,
                       a:x.a,
                       n:x.n,
                       emails:"dummy",
                       dataTs:todayTs,
                       pml:"Not available"
                    };

                    // store in dynamodb
//console.log("put",data);
                    dynamo.putItem({
                       "TableName":"zboota-cars",
                       "Item":data
                    },function(err,data3) {
                      if(err!=null) {
                         // http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html
                         context.fail("Failed to put to dynamodb. "+err);
                      } else {
                        // return
                        conclude(data,data2,event,context);
                      }
                    });
                });
            } else {            
                //console.log("found");

                // update last get timestamp
                data=data.Item;
                conclude(data,data2,event,context);
            }
        });
    });
  
};


exports.drop=function(key, context) {
        dynamo.deleteItem({
            "TableName":"zboota-cars",
            "Key":{"id":key}
        }, function(err,data) {
            if(err!=null) {
                context.fail("Failed to remove from ddb. "+err);
            } else { context.succeed(); }
        }); 
};

exports.exists = function(key, context) {
        dynamo.getItem({
            "TableName":"zboota-cars",
            "Key":{"id":key}
        }, function(err,data) {
            if(err!=null) {
                context.fail("Failed to remove from ddb. "+err);
            } else {
                context.succeed(data!=null && Object.keys(data).length!=0);
            }
        });
};

 
