var WebIsf=require('app/WebIsf');
var WebPml=require('app/WebPml');
var WebDawlati=require('app/WebDawlati');
var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc

AWS.config.update({region: "us-west-2"});

// JS Class declaration
// For nodejs exports, check bottom of file
function DdbGet() {

  this.dynamo = new doc.DynamoDB();
  var self=this;

  this.conclude = function(data,data2,event,context) {
    delete data.lastGetTs;
    delete data.l;
    delete data.addedTs;
    delete data.emails;
        
    id=data.id;
    delete data.id;
    data2[id]=JSON.parse(JSON.stringify(data));

    if(Object.keys(data2).length==event.length) context.succeed(data2);
  };

  this.prepare=function(x,event,context,dataIsf,dataPml,dataMech) {

    // reformat for return
    todayTs=new Date().toISOString().replace(/T/," ").replace(/\..*/,"");
    data=JSON.parse(JSON.stringify(x));
    data.lastGetTs=todayTs;
    data.l="dummy";
    data.addedTs=todayTs;
    data.isf=dataIsf;
    data.id=x.a+"/"+x.n;
    data.emails="dummy";
    data.dataTs=todayTs;
    data.pml=dataPml;
    if(dataMech) data.dm=dataMech;

    // store in dynamodb
    //console.log("put",data);
    self.dynamo.putItem({
       "TableName":"zboota-cars",
       "Item":data
    },function(err,data3) {
       if(err!=null) {
         // http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html
         context.fail("Failed to put to dynamodb. "+err);
       } else {
         // return
         self.conclude(data,data2,event,context);
       }
    });
  };

  this.get = function(event, context) {
    //console.log('Received event:', JSON.stringify(event, null, 2));
    data2={};
    event.map(function(x) {
  
      self.dynamo.getItem({
          "TableName":"zboota-cars",
          "Key":{"id":x.a+"/"+x.n}
      }, function(err,data) {
    
        if(data==null || Object.keys(data).length==0) {
          //console.log("Not found");
          WebIsf.handler(x,function(dataIsf) {
          WebPml.handler(x,function(dataPml) {
            if(x.hasOwnProperty('t')&&x.hasOwnProperty('hp')&&x.hasOwnProperty('y')) {
              WebDawlati.handler(x,function(dataMech) {
                self.prepare(x,event,context,dataIsf,dataPml,dataMech);
              });
            } else {
              self.prepare(x,event,context,dataIsf,dataPml);
            }
          }); // end WebPml
          }); // end WebIsf
        } else {            
          //console.log("found");
          // update last get timestamp
          data=data.Item;
          self.conclude(data,data2,event,context);
        }
      });
    });
    
  };


  this.drop=function(key, context) {
    self.dynamo.deleteItem({
        "TableName":"zboota-cars",
        "Key":{"id":key}
    }, function(err,data) {
        if(err!=null) {
      context.fail("Failed to remove from ddb. "+err);
        } else { context.succeed(); }
    }); 
  };

  this.exists = function(key, context) {
    self.dynamo.getItem({
        "TableName":"zboota-cars",
        "Key":{"id":key}
    }, function(err,data) {
      if(err!=null) {
        context.fail("Failed to remove from ddb. "+err);
      } else {
        context.succeed(data!=null && Object.keys(data).length!=0);
      }
    });
  };

} // end class DdbGet

dg=new DdbGet();
exports.drop=dg.drop;
exports.exists = dg.exists;
exports.handler = dg.get;
