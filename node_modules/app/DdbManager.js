var DdbGet=require('app/DdbGet');
var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc
var config = require('app/config.json');

AWS.config.update({region: config.ZBOOTA_SERVER_AWS_REGION});

// JS Class declaration
// For nodejs exports, check bottom of file
function DdbManager() {

  this.dynamo = new doc.DynamoDB();
  var self=this;

  this.get = function(event, context) {
    DdbGet.init(event,context,true);
    DdbGet.get();
  };

  this.getNotSilent = function(event, context) {
    DdbGet.init(event,context,false);
    DdbGet.get();
  };

  this.drop=function(key, context) {
    self.dynamo.deleteItem({
        "TableName":"zboota-cars",
        "Key":{"id":key}
    }, function(err,data) {
        if(err!=null) {
      context.fail("Failed to remove from ddb. "+err);
        } else { context.succeed(); }
    }); 
  };

  this.exists = function(key, context) {
    self.dynamo.getItem({
        "TableName":"zboota-cars",
        "Key":{"id":key}
    }, function(err,data) {
      if(err!=null) {
        context.fail("Failed to remove from ddb. "+err);
      } else {
        context.succeed(data!=null && Object.keys(data).length!=0);
      }
    });
  };

} // end class DdbManager

dm=new DdbManager();
exports.drop=dm.drop;
exports.exists = dm.exists;
exports.get = dm.get;
exports.getNotSilent = dm.getNotSilent;
