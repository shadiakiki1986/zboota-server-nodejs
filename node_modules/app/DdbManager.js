var DdbGet=require('app/DdbGet');
var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc
var config = require('app/config.json');

AWS.config.update({region: config.ZBOOTA_SERVER_AWS_REGION});

// JS Class declaration
// For nodejs exports, check bottom of file
var DdbManager = function() {
  this.dynamo = new doc.DynamoDB();
};

DdbManager.prototype.get = function(event, context) {
  var dg = new DdbGet(event,context,true);
  if(!dg.invalid) dg.get();
};

DdbManager.prototype.getNotSilent = function(event, context) {
  var dg = new DdbGet(event,context,false);
  if(!dg.invalid) dg.get();
};

DdbManager.prototype.drop=function(key, context) {
  this.dynamo.deleteItem({
      "TableName":"zboota-cars",
      "Key":{"id":key}
  }, function(err,data) {
      if(err!=null) {
    context.fail("Failed to remove from ddb. "+err);
      } else { context.succeed(); }
  }); 
};

DdbManager.prototype.exists = function(key, context) {
  this.dynamo.getItem({
      "TableName":"zboota-cars",
      "Key":{"id":key}
  }, function(err,data) {
    if(err!=null) {
      context.fail("Failed to remove from ddb. "+err);
    } else {
      context.succeed(data!=null && Object.keys(data).length!=0);
    }
  });
};

DdbManager.prototype.DdbManager = DdbManager;

module.exports = function () {
  return new DdbManager();
};
