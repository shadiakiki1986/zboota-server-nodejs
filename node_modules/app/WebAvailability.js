var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc
var MailManager = require('app/MailManager');
var Validator = require('app/Validator');
var config = require('app/config.json');
//var curl = require('node-curl');
var pingThis2 = require('app/pingThis2');

AWS.config.update({region: config.ZBOOTA_SERVER_AWS_REGION});


// JS Class declaration
// For nodejs exports, check bottom of file
var WebAvailability = function(context) {

  // context should have succeed and fail functions
  if(!Validator.validContext(context)) throw("Context is invalid");

  this.context=context;
  this.dynamo = new doc.DynamoDB();
  this.todayD=new Date().toISOString().substr(0,10);
};

WebAvailability.prototype.init = function() {
  var self = this;
  self.ddbGet("dawlati",function(x1) {
    self.ddbGet("isf",function(x2) {
      self.ddbGet("pml",function(x3) {
        self.context.succeed({
          "dawlati": x1,
          "isf": x2,
          "pml": x3
        });
      });
    });
  });

}; // end class WebAvailability

WebAvailability.prototype.refresh = function(cb) {
  var self = this;
        self.ping("http://www.dawlati.gov.lb/en/mecanique",function(x1) {
          self.ping("http://apps.isf.gov.lb/speedticket/speedticket_en.php",function(x2) {
            self.ping("http://www.parkmeterlebanon.com/statment_of_account.aspx",function(x3) {
              res={ "dawlati":x1,
                "isf":x2,
                "pml":x3
              };
              self.ddbSet("dawlati",res["dawlati"],function() {
                self.ddbSet("isf",res["isf"],function() {
                  self.ddbSet("pml",res["pml"],function() {
                    cb();
                  });
                });
              });
            });
          });
        });

};

WebAvailability.prototype.ping = function(url,cb,timeout) {
    if(timeout === undefined) {
      if(config.hasOwnProperty("MY_CURL_TIMEOUT")) {
        timeout = config.MY_CURL_TIMEOUT;
      } else {
        timeout = 10;
      }
    }

//    curl(url,{VERBOSE: 0,TIMEOUT_MS: timeout*1000},function(err) {
//      cb(!err&&(this.status==200||this.status==302));
//    });

    pingThis2(
      url,
      function() { },
      function() { cb(false); },
      function() { cb(true); },
      timeout*1000).init();

};

WebAvailability.prototype.ddbSet = function(srcId,status,cb) {
        this.dynamo.putItem({
            'TableName' : 'zboota-availability',
            'Item' : {
                'srcId'   : srcId,
                'statusDate' : this.todayD,
                'statusVal'   : (status?1:0)
             }
        },function(err,data3) {
           if(err!=null) {
             // http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html
             self.context.fail("Failed to put to dynamodb. "+err);
           } else {
             // return
             cb();
           }
        });
};

WebAvailability.prototype.ddbGetCore = function(srcId,success,fail) {
  this.dynamo.getItem({
      'TableName' : 'zboota-availability',
      'Key' : { 'srcId'   : srcId }
  }, function(err,data) {
    if(!!data&&!err&&data.hasOwnProperty("Item")) {
      success(data);
    } else {
      fail(err);
    }
  });
};

WebAvailability.prototype.ddbGetPost = function(srcId,o,cb) {
  var self = this;
  o=o['Item'];
  if(o['statusDate']<this.todayD) {
    this.refresh(function() {
      self.ddbGetCore(srcId,function(o) {
        o=o['Item'];
        if(o['statusDate']<self.todayD) throw new Exception("Error in server availability module");
        cb(o['statusVal']==1);
      },self.context.fail);
    });
  } else {
    cb(o['statusVal']==1);
  }
};

WebAvailability.prototype.ddbGet = function(srcId,cb) {
  self = this;
  this.ddbGetCore(srcId,function(o) {
    if(!o.hasOwnProperty("Item")) {
      self.refresh(function() {
        self.ddbGetCore(srcId,function(o) {
          if(o.length==0) throw new Exception("Error in server availability module");
          self.ddbGetPost(srcId,o,cb);
        }, self.context.fail);
      });
    }
    self.ddbGetPost(srcId,o,cb);
  }, this.context.fail);
};


WebAvailability.prototype.WebAvailability = WebAvailability;

module.exports = function (context) {
  return new WebAvailability(context);
};

