var AWS = require("aws-sdk");
var doc = require('dynamodb-doc'); // https://www.npmjs.com/package/dynamodb-doc
var Validator = require('app/Validator');
var config = require('app/config.json');

AWS.config.update({region: config.ZBOOTA_SERVER_AWS_REGION});


// JS Class declaration
// For nodejs exports, check bottom of file
var Statistics = function(context) {
// context: object with succeed function and fail function

  // context should have succeed and fail functions
  if(!Validator.validContext(context)) throw("Context is invalid");
  this.context=context;
  this.dynamo = new doc.DynamoDB();
};

Statistics.prototype.get = function() {
    var self=this;
    this.dynamo.scan({
        TableName: "zboota-statistics",
        ProjectionExpression: 'statDate,nTotal,nNew',
        ExpressionAttributeValues:  { ':val1' : 'carsLastGetInPast24Hrs'},
        FilterExpression: 'statName = :val1'
    }, function(err,data) {
      if(!!data&&!err&&data.hasOwnProperty("Items")) {
	// flatten into structure suitable for jqplot
	o = {
          nTotal: data.Items.map(function(x) { return [x["statDate"], x["nTotal"]]; }),
          nNew: data.Items.map(function(x) { return [x["statDate"], x["nNew"]]; })
        };

        self.dynamo.scan(
          { TableName: 'zboota-users' },
          function(e1,d1) {
          self.dynamo.scan(
            { TableName: 'zboota-cars' },
            function(e2,d2) {
            self.dynamo.scan(
              { TableName: 'zboota-notifications' },
              function(e3,d3) {
                stats = {
                  users: d1.Items.length,
                  cars: d2.Items.length,
                  notifications: d3.Items.length,
                  carsLastGetInPast24Hrs: o
                };
                self.context.succeed(stats);
            });
          });
        });

      } else {
        self.context.fail("Error in ddb retrieval of stats: "+err);
      }
    });

}; // end class Statistics


Statistics.prototype.Statistics = Statistics;

module.exports = function (context) {
  return new Statistics(context);
};

