var DdbUser = require("app/DdbUser");
var DdbGet = require("app/DdbGet");
var MailManager = require('app/MailManager');

module.exports.login = function (event,context) {
  du = new DdbUser(event,context,false);
  if(du.invalid) return;
  du.loginCore();
};

module.exports.forgotPassword = function (event,context) {
  du = new DdbUser(event,context,false,true);
  if(du.invalid) return;
  du.connect(function() {
    if(!du.checkEmailRegistered()) {
      context.fail("Email address not registered.");
      return;
    }
    if(!du.checkPassFail()) {
      context.fail("Account locked.");
      return;
    }
    du.incrementPassFail(function() {
      // send email
      MailManager.mailSend(
        event.email,
        "Zboota forgotten password",
        "Welcome to Zboota. Your password is "+du.entry.pass,
        { fail: function(err) { context.fail("Failed to send email to "+event.email); },
          succeed: function() { context.succeed("{}"); }
        }
      );
    });
  });
};

module.exports.update = function (event,context) {
  if(!event.email||!event.pass||!event.lpns) {
    context.fail("Missing email or pass or lpns");
    return;
  }

  // constructor used to validate entries
  var dg = new DdbGet(JSON.parse(event.lpns),context,true); 
  if(dg.invalid) return;

  // process data
  du = new DdbUser(
    event,
    { fail: context.fail,
      succeed: function(lpns) {
        du.context = {
          fail: context.fail,
          succeed: context.succeed
        };
        du.updateAccountNumbers(event.lpns);
      }
    },
    false
  );
  if(du.invalid) return;
  du.loginCore();

};

module.exports.newUser = function (event,context) {
  // process data
  du = new DdbUser(event,context,false,true);
  if(du.invalid) return;
  du.newUser();

};

module.exports.testUserPassword = function (event,context) {
  // process data
  du = new DdbUser({"email":"shadi_akiki_1986@hotmail.com"},context,false,true);
  if(du.invalid) return;
  du.connect(function() {
    context.succeed(du.entry['pass']);
  });

};

